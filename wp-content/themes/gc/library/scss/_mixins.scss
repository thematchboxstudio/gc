/*********************
CLEARFIXIN'
*********************/

// Contain floats: nicolasgallagher.com/micro-clearfix-hack/
.clearfix {
  zoom: 1;
	&:before, &:after { content: ""; display: table; }
	&:after { clear: both; }
}

/*********************
TOOLS
*********************/

// BORDER-BOX ALL THE THINGS! (http://paulirish.com/2012/box-sizing-border-box-ftw/)
* { 
	@include box-sizing(border-box);
}

// http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
.image-replacement {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}


/*********************
COLORS
Need help w/ choosing your colors? Try this site out:
http://0to255.com/
*********************/

$alert-yellow:      #ebe16f;
$alert-red:         #fbe3e4;
$alert-green:       #e6efc2;
$alert-blue:        #d5edf8;

$black:             #231F20;
$white:             #FFFCDE;

$accent: #891A33 /* red */;
$accent-two: #5BC3BE /* blue */;
$accent-three: #F58A33 /* orange */;
$accent-four: #4A030A /* dark red */;
$accent-five: #C1B49A /* tan */;
$accent-six: #5A4A42;
$accent-seven: #008286; //dark blue;
$accent-eight: #d86e1e; //dark orange


$bones-pink:        #f01d4f;
$bones-blue:        #1990db;

$link-color:        $white;
$link-hover:        darken($link-color, 9%);

/*
Here's a great tutorial on how to
use color variables properly:
http://sachagreif.com/sass-color-variables/
*/



/*********************
UNITS
*********************/
$site-width: 1216px;

$margin: 1.5em;
$marginhalf: (.5 * $margin);
$marginquarter: (.25 * $margin);
$margin2x: (2 * $margin);
$margin3x: (3 * $margin);
$margin4x: (4 * $margin);


/*********************
BREAKPOINTS
*********************/
$phone: 1em;
$phone-landscape: 25em;
$tablet: 56em;
$desktop: 71em;



/*********************
TYPOGRAPHY
*********************/

$sans-serif:        "proxima-nova","Helvetica Neue", Helvetica, Arial, sans-serif;
$serif:             "abril-text", "Georgia", Cambria, Times New Roman, Times, serif;


// font-size
@mixin font-size( $decimal-size, $keyword: null ) {
  $base-font-multiplier: 1;
  @if $keyword { font-size: $keyword; }
  @else { font-size: $decimal-size * $base-font-multiplier * 16px; }
  font-size: $decimal-size * 1rem;
}


/*
use the best ampersand
http://simplebits.com/notebook/2008/08/14/ampersands-2/
*/
span.amp {
  font-family: Baskerville,'Goudy Old Style',Palatino,'Book Antiqua',serif !important;
  font-style: italic;
}

// text alignment
.text-left   { text-align: left; }
.text-center { text-align: center; }
.text-right  { text-align: right; }


// alerts and notices
%alert {
	margin: 10px;
	padding: 5px 18px;
	border: 1px solid;
}

.alert-help {
	@extend %alert;
	border-color: darken($alert-yellow, 5%);
	background: $alert-yellow;
}

.alert-info {
	@extend %alert;
	border-color: darken($alert-blue, 5%);
	background: $alert-blue;
}

.alert-error {
	@extend %alert;
	border-color: darken($alert-red, 5%);
	background: $alert-red;
}

.alert-success {
	@extend %alert;
	border-color: darken($alert-green, 5%);
	background: $alert-green;
}

/*********************
TRANISTION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/
@mixin hovers($time: .2s, $function: ease-in-out) {
  @include transition-property(all);
  @include transition-duration($time);
  @include transition-timing-function($function);
}

@mixin slide($time:.5s, $function: ease-in-out) {
  @include transition-property(all);
  @include transition-duration($time);
  @include transition-timing-function($function);
}

@mixin button-slide($time:.25s, $function: ease-in-out) {
  @include transition-property(all);
  @include transition-duration($time);
  @include transition-timing-function($function);
}

@mixin no-animation($time:0s, $function: ease-in-out) {
  @include transition-property(all);
  @include transition-duration($time);
  @include transition-timing-function($function);
}
// Fade In add classes 'fade-in'
/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
 
.fade-in {
    opacity:0;  /* make things invisible upon start */
    -webkit-animation:fadeIn ease-out 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    -moz-animation:fadeIn ease-out 1;
    animation:fadeIn ease-out 1;
 
    -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
    -moz-animation-fill-mode:forwards;
    animation-fill-mode:forwards;
 
    -webkit-animation-duration:.6s;
    -moz-animation-duration:.6s;
    animation-duration:.6s;
}
 
.fade-in {
-webkit-animation-delay: 1.5s;
-moz-animation-delay: 1.5s;
animation-delay: 1.5s;
}

.two {
-webkit-animation-delay: .01s;
-moz-animation-delay: .01s;
animation-delay: .01s;
}


/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdue it.
*********************/

/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}

/*********************
BOX SIZING
*********************/

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing:    $type;
	-ms-box-sizing:     $type;
	box-sizing:         $type;
}


/*********************
BUTTONS
*********************/

button, button:visited {
	font-family: $sans-serif;
	border: 1px solid darken($link-color, 13%);
	border-top-color: darken($link-color, 7%);
	border-left-color: darken($link-color, 7%);
	padding: 4px 12px;
	color: $white;
	display: inline-block;
	font-size: 11px;
	font-weight: bold;
	text-decoration: none;
	text-shadow: 0 1px rgba(0,0,0, .75);
	cursor: pointer;
	margin-bottom: 20px;
	line-height: 21px;
	border-radius: 4px;
	@include css-gradient($link-color, darken($link-color, 5%));


	&:hover, &:focus {
		color: $white;
	  	border: 1px solid darken($link-color, 13%);
	  	border-top-color: darken($link-color, 20%);
	 	border-left-color: darken($link-color, 20%);
		@include css-gradient(darken($link-color, 5%), darken($link-color, 10%));
	}

	&:active {
		@include css-gradient(darken($link-color, 5%), $link-color);
	}
}

.blue-button, .blue-button:visited {
	border-color: darken($bones-blue, 10%);
	text-shadow: 0 1px 1px darken($bones-blue, 10%);
	@include css-gradient( $bones-blue, darken($bones-blue, 5%) );
	box-shadow: inset 0 0 3px lighten($bones-blue, 16%);

	&:hover, &:focus {
		border-color: darken($bones-blue, 15%);
		@include css-gradient( darken($bones-blue, 4%), darken($bones-blue, 10%) );
	}
	&:active {
		@include css-gradient( darken($bones-blue, 5%), $bones-blue );
	}
}